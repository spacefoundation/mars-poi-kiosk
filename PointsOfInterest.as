package  {		import away3d.arcane;	import away3d.cameras.*;	import away3d.containers.*;	import away3d.controllers.*;	import away3d.debug.*;	import away3d.entities.*;	import away3d.lights.*;	import away3d.loaders.parsers.*;	import away3d.materials.*;	import away3d.materials.lightpickers.*;	import away3d.materials.compilation.*;	import away3d.materials.methods.*;	import away3d.primitives.*;	import away3d.textures.*;	import away3d.utils.*;		import flash.display.*;	import flash.events.*;	import flash.filters.*;	import flash.geom.*;	import flash.text.*;	import flash.ui.*;		public class PointsOfInterest {		public var points:Array = [];				public function PointsOfInterest() {			definePOI();			initPosAttrib();		}				//lon, lat, elevation => x, y, z		//thank you: http://astro.uchicago.edu/cosmus/tech/latlong.html		//I know, the Earth isn't perfectly round (nor Mars for that matter), but works for a kiosk :D		public function getVec(lon:Number, lat:Number, radius:Number):Vector3D {			var x:Number;			var y:Number;			var z:Number;						lat = lat * Math.PI / 180			lon = lon * Math.PI / 180			x = -radius * Math.cos(lat) * Math.cos(lon);			y =  radius * Math.sin(lat) ;			z =  radius * Math.cos(lat) * Math.sin(lon);						return new Vector3D(x,y,z);		}				private function initPosAttrib():void {			var i:Number;			for(i=0; i<points.length; i++) {				points[i].innerVector = getVec(points[i].x, points[i].y, 115);				points[i].outerVector = getVec(points[i].x, points[i].y, 130);				points[i].lineSeg = new LineSegment(points[i].innerVector, points[i].outerVector, 0xeeba99, 0xFFFFFF, 1);				points[i].enabled = false;			}		}				private function definePOI():void {			var poi:Object;						poi = {};			poi.title = "Olympus Mons";			poi.x = 134;			poi.y = 18;			points.push(poi);						poi = {};			poi.title = "Valles Marineris";			poi.x = 65;			poi.y = -12.5;			points.push(poi);						poi = {};			poi.title = "Hellas Basin";			poi.x = 294;			poi.y = -41;			points.push(poi);						poi = {};			poi.title = "Huygens Crater";			poi.x = 305;			poi.y = -14;			points.push(poi);						poi = {};			poi.title = "Northern Polar Region";			poi.x = 0;			poi.y = 90;			points.push(poi);						poi = {};			poi.title = "South Polar Cap";			poi.x = 0;			poi.y = -90;			points.push(poi);						poi = {};			poi.title = "Schiaparelli Crater";			poi.x = 344;			poi.y = -3;			points.push(poi);						poi = {};			poi.title = "Syrtis Major";			poi.x = 290;			poi.y = 10;			points.push(poi);						poi = {};			poi.title = "Solis Lacus"; //double check this one			poi.x = 85;			poi.y = -25;			points.push(poi);						poi = {};			poi.title = "Terra Sirenum"; //double check this one			poi.x = 132;			poi.y = -33;			points.push(poi);						poi = {};			poi.title = "Arabia Terra"; //double check this one			poi.x = 330;			poi.y = 16;			points.push(poi);						poi = {};			poi.title = "Tharsis Montes: Arsia Mons";			poi.x = 121;			poi.y = -9;			points.push(poi);						poi = {};			poi.title = "Tharsis Montes: Pavonis Mons";			poi.x = 113;			poi.y = 1;			points.push(poi);						poi = {};			poi.title = "Tharsis Montes: Ascraeus Mons";			poi.x = 104;			poi.y = 11;			points.push(poi);		}	}	}